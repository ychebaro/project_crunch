<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Collaborative Research:  Concurrent Software Verification  with Rely/Guarantee Abstraction</AwardTitle>
<AwardEffectiveDate>08/16/2017</AwardEffectiveDate>
<AwardExpirationDate>07/31/2019</AwardExpirationDate>
<AwardAmount>65597</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
</ProgramOfficer>
<AbstractNarration>It is now widely recognized that increasing the reliability of&lt;br/&gt;concurrent software is one of the most important scientific and&lt;br/&gt;technological challenges in the emerging era of multi-core and&lt;br/&gt;distributed computing.  The last decade has seen substantial advances&lt;br/&gt;in automatic verification technology to improve the reliability of&lt;br/&gt;sequential programs, and software tools that can be applied to large &lt;br/&gt;industrial code bases. Unfortunately, the underlying technology of &lt;br/&gt;such tools cannot be directly applied to concurrent programs. &lt;br/&gt;&lt;br/&gt;This project investigates scalable techniques for automatic verification of &lt;br/&gt;concurrent software. The approach uses thread-modular decomposition of &lt;br/&gt;the overall problem that does not completely decompose to the granularity &lt;br/&gt;of an individual thread. Since base components may exhibit concurrent &lt;br/&gt;behavior, the investigators develop analysis algorithms for these base components &lt;br/&gt;so that they can be automatically proven correct with respect to their environment&lt;br/&gt;description and vice-versa. This work yields automatic verification tools that &lt;br/&gt;exploit richer notions of modular reasoning about parallelism, thereby offering &lt;br/&gt;improved scalability and robustness over previous approaches. The project team&lt;br/&gt;includes graduate and undergraduate students.</AbstractNarration>
<MinAmdLetterDate>12/01/2017</MinAmdLetterDate>
<MaxAmdLetterDate>12/01/2017</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1813745</AwardID>
<Investigator>
<FirstName>Eric</FirstName>
<LastName>Koskinen</LastName>
<EmailAddress>eric.koskinen@stevens.edu</EmailAddress>
<StartDate>12/01/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Stevens Institute of Technology</Name>
<CityName>HOBOKEN</CityName>
<ZipCode>070305991</ZipCode>
<PhoneNumber>2012168762</PhoneNumber>
<StreetAddress>CASTLE POINT ON HUDSON</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>8206</Code>
<Text>Formal Methods and Verification</Text>
</ProgramReference>
</Award>
</rootTag>

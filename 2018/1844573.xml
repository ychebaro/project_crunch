<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Comprehensive Techniques and Design for Flexible Graph Visualization of Software and Systems</AwardTitle>
<AwardEffectiveDate>08/01/2019</AwardEffectiveDate>
<AwardExpirationDate>07/31/2024</AwardExpirationDate>
<AwardTotalIntnAmount>527898.00</AwardTotalIntnAmount>
<AwardAmount>100073</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05020000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>IIS</Abbreviation>
<LongName>Div Of Information &amp; Intelligent Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Maria Zemankova</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Computationally-assisted drug discovery, predictions of hurricane trajectories, and simulations of new energy sources are all made possible by underlying software (programs). To construct these programs, software developers must divide each problem into smaller operations and order those operations carefully to compute the correct answer. This ordering can be viewed as a network graph, where each operation points to its next possible operations in order. Furthermore, to make these programs run fast enough to be useful, developers, engineers, and researchers must find new ways to balance those operations with system resources such as storage, processing units, and memory. These resource constraints add more ordering requirements to the graph. Verifying this graph can help avoid bugs. Information inferred from this graph can be used to automatically decrease the time the program requires to run. Thus, people working in computing frequently examine these graphs to generate or validate new ideas about how to write their programs or use computational resources. For example, a programmer may discover a long sequence of operations performed one after another that could be parallelized, thus making the program faster. General approaches for drawing networks have not met the demand of graphs in the computing space, resulting in difficult to interpret, if not unusable, diagrams. The purpose of this project is to develop new graph visualization approaches to better support developers, engineers, and researchers in their work and learners in their understanding of computing and their integration of tools such as graph visualization into their skill sets.&lt;br/&gt;&lt;br/&gt;Graphs arising from computing contexts frequently take the form of directed acyclic or near-acyclic graphs (DAG-like graphs). The aim of this project is to develop layout algorithms and design guidelines specifically for this class of computing graphs. Research tasks include surveying graphs generated across computing disciplines to derive a characterization of their structure, their domain-specific sub-structures, and their common drawing conventions. The characterization will guide the development of constraints and objectives for layout of node-link diagrams as well as design guidelines for interactivity and visual encoding in support of domain-specific tasks. The results will be implemented in an open-source library and evaluated for both expressivity of computing structures and computational performance.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>02/08/2019</MinAmdLetterDate>
<MaxAmdLetterDate>02/08/2019</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1844573</AwardID>
<Investigator>
<FirstName>Katherine</FirstName>
<LastName>Isaacs</LastName>
<EmailAddress>kisaacs@email.arizona.edu</EmailAddress>
<StartDate>02/08/2019</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Arizona</Name>
<CityName>Tucson</CityName>
<ZipCode>857194824</ZipCode>
<PhoneNumber>5206266000</PhoneNumber>
<StreetAddress>888 N Euclid Ave</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Arizona</StateName>
<StateCode>AZ</StateCode>
</Institution>
<ProgramElement>
<Code>7364</Code>
<Text>INFO INTEGRATION &amp; INFORMATICS</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER-Faculty Erly Career Dev</Text>
</ProgramReference>
<ProgramReference>
<Code>7364</Code>
<Text>INFO INTEGRATION &amp; INFORMATICS</Text>
</ProgramReference>
<ProgramReference>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
</Award>
</rootTag>

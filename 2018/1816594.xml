<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Collaborative: Managing Software Evolution through Continuous Measuring and Monitoring</AwardTitle>
<AwardEffectiveDate>10/01/2018</AwardEffectiveDate>
<AwardExpirationDate>09/30/2021</AwardExpirationDate>
<AwardTotalIntnAmount>278794.00</AwardTotalIntnAmount>
<AwardAmount>278794</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Architecture degradation can have fundamental impacts on software quality and productivity, resulting in substantial loss of time and money. It has been estimated that failed and troubled software costs around 60 billion to 70 billion dollars per year in the United States alone, and recent research has revealed that only 2%-6% of large projects are successful. None of these problems happen overnight. Software evolves continuously, through numerous maintenance tasks, such as fixing bugs and adding new features. Developers typically are focused on their immediate tasks while the cumulative impacts of their activities, as they affect the architecture, go unnoticed. Early symptoms continuously evolve and grow in scope and significance until the system becomes difficult to maintain. Numerous software metrics and measures have been proposed to monitor software maintainability, but they have not yet achieved the reliability needed for comparing and contrasting projects, or to signal early symptoms of severe problems. Current techniques, which are largely based on (static) syntactic dependencies, tend to report large numbers of false positives. This makes it hard to pinpoint the true problems.&lt;br/&gt; &lt;br/&gt;The project will develop a novel metric suite for source code assessment based on options theory, accompanied by a suite of evolution history measures using maintenance tasks as first-class entities. The project will also develop a hotspot detection method to capture early symptoms of architecture flaws before the software becomes unmanageably buggy and costly to repair.  This project has the potential to revolutionize how software systems are monitored and managed, potentially resulting in substantial savings for development organizations, and resulting in a more disciplined, controlled process of software evolution and maintenance. The proposed metrics and tools will be integrated with widely-used software management tools, such as Bitbucket and Github, potentially impacting hundreds of thousands of software projects. The industrial benchmark will establish a Software Heath Chart against which any software project can make a comparison. The methods produced from this research can be used in software design and maintenance education, providing pedagogical tools with scientific foundations.  The empirical basis for this research will provide an industry-wide foundation for reasoning about software evolution and management.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>07/16/2018</MinAmdLetterDate>
<MaxAmdLetterDate>07/16/2018</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1816594</AwardID>
<Investigator>
<FirstName>Yuanfang</FirstName>
<LastName>Cai</LastName>
<EmailAddress>yfcai@cs.drexel.edu</EmailAddress>
<StartDate>07/16/2018</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Drexel University</Name>
<CityName>Philadelphia</CityName>
<ZipCode>191021119</ZipCode>
<PhoneNumber>2158955849</PhoneNumber>
<StreetAddress>1505 Race St, 10th Floor</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
</Award>
</rootTag>

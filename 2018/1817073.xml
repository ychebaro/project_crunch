<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Indy: Toward Safe and Fast Compiler Flags</AwardTitle>
<AwardEffectiveDate>10/01/2018</AwardEffectiveDate>
<AwardExpirationDate>09/30/2020</AwardExpirationDate>
<AwardTotalIntnAmount>481430.00</AwardTotalIntnAmount>
<AwardAmount>497430</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Rapid advances in computer architecture are necessitated by the growing demand for computing speed and also energy efficiency. Unfortunately, these advances require significant adaptations of existing software and their recompilation, and when applied to software in scientific simulations and engineering domains, the numeric outputs of these software can change. This issue is of significant concern, as the whole scientific and engineering enterprise rests on reproducible results building on top of prior contributions. This research project develops methods to detect and isolate those software components responsible for changing answers, and produces actionable evidence in terms of the software routines that need to be rewritten. This ensures that scientific software can truly become an asset that serves generations of research, and not be obviated every three or so years when hardware changes.&lt;br/&gt;&lt;br/&gt;The project develops methods to compile a users' software application or library using different compilers and executing on different platforms. Given a collection of acceptance tests, the tools developed in this work (collectively called "Indy", connoting "Fast and Safe Compiler Flags") help detect those components that produce unacceptably deviant answers. Then, employing code bisection methods, the Indy tools root-cause the source of variability to the level of single file or even to a single function symbol. Given that the methods used by Indy can be computationally intensive, the project also explores machine-learning methods and other static analysis methods to avoid wholesale recompilation and re-execution. The Indy tools are maintained on public repositories, and the investigative team maintains strong connections with user-groups to ensure tool adoption, feedback, and refinement. The project will release Indy as open source and build a user community around Indy by ensuring that interested researchers are able to contribute to the code-base. This will allow a wider growth of the project. This aspect is of special interest to the software cluster in the NSF Office of Advanced Cyberinfrastructure, which is co-funding this award.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>07/20/2018</MinAmdLetterDate>
<MaxAmdLetterDate>04/09/2019</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1817073</AwardID>
<Investigator>
<FirstName>Ganesh</FirstName>
<LastName>Gopalakrishnan</LastName>
<EmailAddress>ganesh@cs.utah.edu</EmailAddress>
<StartDate>07/20/2018</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramElement>
<ProgramElement>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramElement>
<ProgramReference>
<Code>026Z</Code>
<Text>NSCI: National Strategic Computing Initi</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7942</Code>
<Text>HIGH-PERFORMANCE COMPUTING</Text>
</ProgramReference>
<ProgramReference>
<Code>8004</Code>
<Text>Software Institutes</Text>
</ProgramReference>
<ProgramReference>
<Code>8206</Code>
<Text>Formal Methods and Verification</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>REU SUPP-Res Exp for Ugrd Supp</Text>
</ProgramReference>
</Award>
</rootTag>
